/***
AVM1Op 版本:v1.0
简要说明:这家伙很懒什么都没写
创建人:ZЁЯ¤  身高:168cm+;体重:57kg+;未婚(已有女友);最爱的运动:睡觉;格言:路见不平,拔腿就跑;QQ:358315553
创建时间:2010年11月8日 15:11:36 (代码生成器: F:/airs/program files2/CodesGenerater/bin-debug/CodesGenerater.swf) 
历次修改:未有修改
用法举例:这家伙很懒什么都没写
*/

package zero.swf.avm1{

	public class AVM1Op{
		public static const end:int=0;
		public static const nextFrame:int=4;
		public static const prevFrame:int=5;
		public static const play:int=6;
		public static const stop:int=7;
		public static const toggleQuality:int=8;
		public static const stopSounds:int=9;
		public static const oldAdd:int=10;
		public static const subtract:int=11;
		public static const multiply:int=12;
		public static const divide:int=13;
		public static const oldEquals:int=14;
		public static const oldLessThan:int=15;
		public static const and:int=16;
		public static const or:int=17;
		public static const not:int=18;
		public static const stringEq:int=19;
		public static const stringLength:int=20;
		public static const substring:int=21;
		public static const pop:int=23;
		public static const int_:int=24;
		public static const getVariable:int=28;
		public static const setVariable:int=29;
		public static const setTargetExpr:int=32;
		public static const concat:int=33;
		public static const getProperty:int=34;
		public static const setProperty:int=35;
		public static const duplicateClip:int=36;
		public static const removeClip:int=37;
		public static const trace_:int=38;
		public static const startDrag:int=39;
		public static const stopDrag:int=40;
		public static const stringLess:int=41;
		public static const throw_:int=42;
		public static const cast:int=43;
		public static const implements_:int=44;
		public static const FSCommand2:int=45;
		public static const random:int=48;
		public static const mBStringLength:int=49;
		public static const ord:int=50;
		public static const chr:int=51;
		public static const getTimer:int=52;
		public static const mbSubstring:int=53;
		public static const mbOrd:int=54;
		public static const mbChr:int=55;
		public static const delete_:int=58;
		public static const delete2:int=59;
		public static const varEquals:int=60;
		public static const callFunction:int=61;
		public static const return_:int=62;
		public static const modulo:int=63;
		public static const new_:int=64;
		public static const var_:int=65;
		public static const initArray:int=66;
		public static const initObject:int=67;
		public static const typeof_:int=68;
		public static const targetPath:int=69;
		public static const enumerate:int=70;
		public static const add:int=71;
		public static const lessThan:int=72;
		public static const equals:int=73;
		public static const toNumber:int=74;
		public static const toString_:int=75;
		public static const dup:int=76;
		public static const swap:int=77;
		public static const getMember:int=78;
		public static const setMember:int=79;
		public static const increment:int=80;
		public static const decrement:int=81;
		public static const callMethod:int=82;
		public static const newMethod:int=83;
		public static const instanceOf:int=84;
		public static const enumerateValue:int=85;
		public static const bitwiseAnd:int=96;
		public static const bitwiseOr:int=97;
		public static const bitwiseXor:int=98;
		public static const shiftLeft:int=99;
		public static const shiftRight:int=100;
		public static const shiftRight2:int=101;
		public static const strictEquals:int=102;
		public static const greaterThan:int=103;
		public static const stringGreater:int=104;
		public static const extends_:int=105;
		public static const gotoFrame:int=129;
		public static const getURL:int=131;
		public static const setRegister:int=135;
		public static const constants:int=136;
		public static const ifFrameLoaded:int=138;
		public static const setTarget:int=139;
		public static const gotoLabel:int=140;
		public static const ifFrameLoadedExpr:int=141;
		public static const function2:int=142;
		public static const try_:int=143;
		public static const with_:int=148;
		public static const push:int=150;
		public static const branch:int=153;
		public static const getURL2:int=154;
		public static const function_:int=155;
		public static const branchIfTrue:int=157;
		public static const callFrame:int=158;
		public static const gotoFrame2:int=159;
		
		public static var ops:Object;
		public static const opNameV:Vector.<String>=get_opNameV();
		private static function get_opNameV():Vector.<String>{
			ops=new Object();
			var opNameV:Vector.<String>=new Vector.<String>(256);
			opNameV.fixed=true;
			opNameV[end]="end";
			ops["end"]=end;
			opNameV[nextFrame]="nextFrame";
			ops["nextFrame"]=nextFrame;
			opNameV[prevFrame]="prevFrame";
			ops["prevFrame"]=prevFrame;
			opNameV[play]="play";
			ops["play"]=play;
			opNameV[stop]="stop";
			ops["stop"]=stop;
			opNameV[toggleQuality]="toggleQuality";
			ops["toggleQuality"]=toggleQuality;
			opNameV[stopSounds]="stopSounds";
			ops["stopSounds"]=stopSounds;
			opNameV[oldAdd]="oldAdd";
			ops["oldAdd"]=oldAdd;
			opNameV[subtract]="subtract";
			ops["subtract"]=subtract;
			opNameV[multiply]="multiply";
			ops["multiply"]=multiply;
			opNameV[divide]="divide";
			ops["divide"]=divide;
			opNameV[oldEquals]="oldEquals";
			ops["oldEquals"]=oldEquals;
			opNameV[oldLessThan]="oldLessThan";
			ops["oldLessThan"]=oldLessThan;
			opNameV[and]="and";
			ops["and"]=and;
			opNameV[or]="or";
			ops["or"]=or;
			opNameV[not]="not";
			ops["not"]=not;
			opNameV[stringEq]="stringEq";
			ops["stringEq"]=stringEq;
			opNameV[stringLength]="stringLength";
			ops["stringLength"]=stringLength;
			opNameV[substring]="substring";
			ops["substring"]=substring;
			opNameV[pop]="pop";
			ops["pop"]=pop;
			opNameV[int_]="int_";
			ops["int_"]=int_;
			opNameV[getVariable]="getVariable";
			ops["getVariable"]=getVariable;
			opNameV[setVariable]="setVariable";
			ops["setVariable"]=setVariable;
			opNameV[setTargetExpr]="setTargetExpr";
			ops["setTargetExpr"]=setTargetExpr;
			opNameV[concat]="concat";
			ops["concat"]=concat;
			opNameV[getProperty]="getProperty";
			ops["getProperty"]=getProperty;
			opNameV[setProperty]="setProperty";
			ops["setProperty"]=setProperty;
			opNameV[duplicateClip]="duplicateClip";
			ops["duplicateClip"]=duplicateClip;
			opNameV[removeClip]="removeClip";
			ops["removeClip"]=removeClip;
			opNameV[trace_]="trace_";
			ops["trace_"]=trace_;
			opNameV[startDrag]="startDrag";
			ops["startDrag"]=startDrag;
			opNameV[stopDrag]="stopDrag";
			ops["stopDrag"]=stopDrag;
			opNameV[stringLess]="stringLess";
			ops["stringLess"]=stringLess;
			opNameV[throw_]="throw_";
			ops["throw_"]=throw_;
			opNameV[cast]="cast";
			ops["cast"]=cast;
			opNameV[implements_]="implements_";
			ops["implements_"]=implements_;
			opNameV[FSCommand2]="FSCommand2";
			ops["FSCommand2"]=FSCommand2;
			opNameV[random]="random";
			ops["random"]=random;
			opNameV[mBStringLength]="mBStringLength";
			ops["mBStringLength"]=mBStringLength;
			opNameV[ord]="ord";
			ops["ord"]=ord;
			opNameV[chr]="chr";
			ops["chr"]=chr;
			opNameV[getTimer]="getTimer";
			ops["getTimer"]=getTimer;
			opNameV[mbSubstring]="mbSubstring";
			ops["mbSubstring"]=mbSubstring;
			opNameV[mbOrd]="mbOrd";
			ops["mbOrd"]=mbOrd;
			opNameV[mbChr]="mbChr";
			ops["mbChr"]=mbChr;
			opNameV[delete_]="delete_";
			ops["delete_"]=delete_;
			opNameV[delete2]="delete2";
			ops["delete2"]=delete2;
			opNameV[varEquals]="varEquals";
			ops["varEquals"]=varEquals;
			opNameV[callFunction]="callFunction";
			ops["callFunction"]=callFunction;
			opNameV[return_]="return_";
			ops["return_"]=return_;
			opNameV[modulo]="modulo";
			ops["modulo"]=modulo;
			opNameV[new_]="new_";
			ops["new_"]=new_;
			opNameV[var_]="var_";
			ops["var_"]=var_;
			opNameV[initArray]="initArray";
			ops["initArray"]=initArray;
			opNameV[initObject]="initObject";
			ops["initObject"]=initObject;
			opNameV[typeof_]="typeof_";
			ops["typeof_"]=typeof_;
			opNameV[targetPath]="targetPath";
			ops["targetPath"]=targetPath;
			opNameV[enumerate]="enumerate";
			ops["enumerate"]=enumerate;
			opNameV[add]="add";
			ops["add"]=add;
			opNameV[lessThan]="lessThan";
			ops["lessThan"]=lessThan;
			opNameV[equals]="equals";
			ops["equals"]=equals;
			opNameV[toNumber]="toNumber";
			ops["toNumber"]=toNumber;
			opNameV[toString_]="toString_";
			ops["toString_"]=toString_;
			opNameV[dup]="dup";
			ops["dup"]=dup;
			opNameV[swap]="swap";
			ops["swap"]=swap;
			opNameV[getMember]="getMember";
			ops["getMember"]=getMember;
			opNameV[setMember]="setMember";
			ops["setMember"]=setMember;
			opNameV[increment]="increment";
			ops["increment"]=increment;
			opNameV[decrement]="decrement";
			ops["decrement"]=decrement;
			opNameV[callMethod]="callMethod";
			ops["callMethod"]=callMethod;
			opNameV[newMethod]="newMethod";
			ops["newMethod"]=newMethod;
			opNameV[instanceOf]="instanceOf";
			ops["instanceOf"]=instanceOf;
			opNameV[enumerateValue]="enumerateValue";
			ops["enumerateValue"]=enumerateValue;
			opNameV[bitwiseAnd]="bitwiseAnd";
			ops["bitwiseAnd"]=bitwiseAnd;
			opNameV[bitwiseOr]="bitwiseOr";
			ops["bitwiseOr"]=bitwiseOr;
			opNameV[bitwiseXor]="bitwiseXor";
			ops["bitwiseXor"]=bitwiseXor;
			opNameV[shiftLeft]="shiftLeft";
			ops["shiftLeft"]=shiftLeft;
			opNameV[shiftRight]="shiftRight";
			ops["shiftRight"]=shiftRight;
			opNameV[shiftRight2]="shiftRight2";
			ops["shiftRight2"]=shiftRight2;
			opNameV[strictEquals]="strictEquals";
			ops["strictEquals"]=strictEquals;
			opNameV[greaterThan]="greaterThan";
			ops["greaterThan"]=greaterThan;
			opNameV[stringGreater]="stringGreater";
			ops["stringGreater"]=stringGreater;
			opNameV[extends_]="extends_";
			ops["extends_"]=extends_;
			opNameV[gotoFrame]="gotoFrame";
			ops["gotoFrame"]=gotoFrame;
			opNameV[getURL]="getURL";
			ops["getURL"]=getURL;
			opNameV[setRegister]="setRegister";
			ops["setRegister"]=setRegister;
			opNameV[constants]="constants";
			ops["constants"]=constants;
			opNameV[ifFrameLoaded]="ifFrameLoaded";
			ops["ifFrameLoaded"]=ifFrameLoaded;
			opNameV[setTarget]="setTarget";
			ops["setTarget"]=setTarget;
			opNameV[gotoLabel]="gotoLabel";
			ops["gotoLabel"]=gotoLabel;
			opNameV[ifFrameLoadedExpr]="ifFrameLoadedExpr";
			ops["ifFrameLoadedExpr"]=ifFrameLoadedExpr;
			opNameV[function2]="function2";
			ops["function2"]=function2;
			opNameV[try_]="try_";
			ops["try_"]=try_;
			opNameV[with_]="with_";
			ops["with_"]=with_;
			opNameV[push]="push";
			ops["push"]=push;
			opNameV[branch]="branch";
			ops["branch"]=branch;
			opNameV[getURL2]="getURL2";
			ops["getURL2"]=getURL2;
			opNameV[function_]="function_";
			ops["function_"]=function_;
			opNameV[branchIfTrue]="branchIfTrue";
			ops["branchIfTrue"]=branchIfTrue;
			opNameV[callFrame]="callFrame";
			ops["callFrame"]=callFrame;
			opNameV[gotoFrame2]="gotoFrame2";
			ops["gotoFrame2"]=gotoFrame2;
			return opNameV;
		}
		
		////
		//

	}
}