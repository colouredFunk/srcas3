<languageVersion: 1.0;>
kernel maoboli
<
    namespace : "zero.shaders";
    vendor : "zero";
    version : 2;
    description : "maoboli";
>
{
    //不支持循环 - -
    //parameter int blurX
    //<
    //    minValue: 0;
    //    maxValue: 100;
    //    defaultValue: 5;
    //>;
    //parameter int blurY
    //<
    //    minValue: 0;
    //    maxValue: 100;
    //    defaultValue: 5;
    //>;
    
    input image4 bg;
    input image4 src;
    output float4 dst;
    
    void evaluatePixel()
    {
        float4 colorAccumulator = float4(0.0, 0.0, 0.0, 0.0);
       
        colorAccumulator += sampleNearest(src, outCoord() + float2(-3,-3));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-3,-2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-3,-1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-3,0));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-3,1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-3,2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-3,3));
       
        colorAccumulator += sampleNearest(src, outCoord() + float2(-2,-3));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-2,-2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-2,-1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-2,0));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-2,1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-2,2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-2,3));
       
        colorAccumulator += sampleNearest(src, outCoord() + float2(-1,-3));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-1,-2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-1,-1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-1,0));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-1,1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-1,2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(-1,3));
        
        colorAccumulator += sampleNearest(src, outCoord() + float2(0,-3));
        colorAccumulator += sampleNearest(src, outCoord() + float2(0,-2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(0,-1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(0,0));
        colorAccumulator += sampleNearest(src, outCoord() + float2(0,1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(0,2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(0,3));
       
        colorAccumulator += sampleNearest(src, outCoord() + float2(1,-3));
        colorAccumulator += sampleNearest(src, outCoord() + float2(1,-2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(1,-1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(1,0));
        colorAccumulator += sampleNearest(src, outCoord() + float2(1,1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(1,2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(1,3));
       
        colorAccumulator += sampleNearest(src, outCoord() + float2(2,-3));
        colorAccumulator += sampleNearest(src, outCoord() + float2(2,-2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(2,-1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(2,0));
        colorAccumulator += sampleNearest(src, outCoord() + float2(2,1));
        colorAccumulator += sampleNearest(src, outCoord() + float2(2,2));
        colorAccumulator += sampleNearest(src, outCoord() + float2(2,3));
       
        colorAccumulator += sampleNearest(bg, outCoord() + float2(3,-3));
        colorAccumulator += sampleNearest(bg, outCoord() + float2(3,-2));
        colorAccumulator += sampleNearest(bg, outCoord() + float2(3,-1));
        colorAccumulator += sampleNearest(bg, outCoord() + float2(3,0));
        colorAccumulator += sampleNearest(bg, outCoord() + float2(3,1));
        colorAccumulator += sampleNearest(bg, outCoord() + float2(3,2));
        colorAccumulator += sampleNearest(bg, outCoord() + float2(3,3));
        
        dst = colorAccumulator / 49.0;
    }
}